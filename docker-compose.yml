services:
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - k8s-network

  rabbitmq:
    image: rabbitmq:3.12.2-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - k8s-network

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: k8s_dash
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - k8s-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/k8s_dash
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672/
      ALLOWED_ORIGINS: http://localhost:3000,http://frontend:3000
      SECRET_KEY: your-secret-key-here
      ACCESS_TOKEN_EXPIRE_MINUTES: "1440"  # 24 hours
      ALGORITHM: HS256
      DEV_MODE: "true"  # Enable development mode for easy authentication
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - k8s-network

  frontend:
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    environment:
      VITE_API_URL: http://localhost:8000
      VITE_DEV_MODE: "true"
      VITE_SKIP_AUTHENTICATION: "true"
    depends_on:
      - backend
    networks:
      - k8s-network

volumes:
  pgdata:
  redis_data:
  rabbitmq_data:

networks:
  k8s-network:
    driver: bridge